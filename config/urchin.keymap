#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

// Layer definitions
#define BASE 0
#define EXT 1
#define SYM 2
#define NUM 3
#define FNC 4
#define SETTINGS 5

// -----------------
#define K_BK LA(LEFT)
#define K_FND LC(F)
#define K_FW LA(RIGHT)

&sk {
  // don't release mods on other mods presses
  ignore-modifiers;
};


/ {
  conditional_layers {
    compatible = "zmk,conditional-layers";
    tri_layer {
      if-layers = <EXT SYM>;
      then-layer = <NUM>;
    };
  };

  combos {
    compatible = "zmk,combos";

    // both left thumb keys
    combo_settings {
      timeout-ms = <200>;
      key-positions = <30 31>;
      bindings = <&mo SETTINGS>;
    };
  };
  keymap {
    compatible = "zmk,keymap";

    // Base alpha layer
    default_layer {
      label = "Base";
      bindings = <
        &kp Q   &kp W   &kp F   &kp P     &kp B        &kp J       &kp L     &kp U       &kp Y     &kp APOS
        &kp A   &kp R   &kp S   &kp T     &kp G        &kp M       &kp N     &kp E       &kp I     &kp O
        &kp Z   &kp X   &kp C   &kp D     &kp V        &kp K       &kp H     &kp COMMA   &kp DOT   &kp SLASH
                                &mo EXT   &kp LSHIFT   &kp SPACE   &mo SYM
      >;
    };

    // Main modifiers and arrow keys
    ext_layer {
      label = "Mods";
      bindings = <
        &kp ESC     &kp K_BK    &kp K_FND    &kp K_FW    &kp INS     &kp PG_UP   &kp HOME   &kp UP     &kp END     &kp CAPS
        &sk LALT    &sk LGUI    &sk LSHIFT   &sk LCTRL   &sk RALT    &kp PG_DN   &kp LEFT   &kp DOWN   &kp RIGHT   &kp DEL
        &kp LC(Z)   &kp LC(X)   &kp LC(C)    &kp LGUI    &kp LC(V)   &kp ENTER   &kp BSPC   &kp TAB    &none       &kp PSCRN
                                             &trans      &kp LCTRL   &kp ENTER   &trans
      >;
    };

    // Numbers and high frequency symbols
    sym_layer {
      label = "Sym.";
      bindings = <
        &kp EXCL   &kp AT     &kp HASH     &kp DOLLAR   &kp PRCNT   &kp EQUAL   &kp GRAVE   &kp COLON   &kp SEMI   &kp PLUS
        &sk LALT   &sk LGUI   &sk LSHIFT   &sk LCTRL    &kp CARET   &kp STAR    &kp LPAR    &kp LBRC    &kp LBKT   &kp MINUS
        &none      &none      &kp BSLH     &kp PIPE     &kp AMPS    &kp TILDE   &kp RPAR    &kp RBRC    &kp RBKT   &kp UNDER
                                           &trans       &mo FNC     &trans      &trans
      >;
    };

    // Numbers
    num_layer {
      label = "Num";
      bindings = <
        &none      &none      &none        &none       &kp DOT     &kp EQL    &kp N7   &kp N8   &kp N9   &kp PLUS
        &sk LALT   &sk LGUI   &sk LSHIFT   &sk LCTRL   &sk RALT    &kp STAR   &kp N4   &kp N5   &kp N6   &kp MINUS
        &none      &none      &kp TAB      &kp BSPC    &kp ENTER   &kp N0     &kp N1   &kp N2   &kp N3   &kp SLASH
                                           &none       &none       &none      &none
      >;
    };

    // Function keys with modifiers
    fnc_layer {
      label = "Func";
      bindings = <
        &kp C_STOP   &kp C_PREV     &kp C_PP        &kp C_NEXT     &kp C_BRI_UP    &kp F12     &kp F7   &kp F8   &kp F9   &none
        &sk LALT     &sk LGUI       &sk LSHIFT      &sk LCTRL      &kp C_BRI_DN    &kp F11     &kp F4   &kp F5   &kp F6   &none
        &kp C_MUTE   &kp C_VOL_DN   &kp LC(LS(C))   &kp C_VOL_UP   &kp LC(LS(V))   &kp F10     &kp F1   &kp F2   &kp F3   &none
                                                    &none          &none           &kp ENTER   &none
      >;
    };

    // Used to change the keyboard's settings.
    settings_layer {
      label = "Sett.";
      bindings = <
        &bootloader      &none   &none   &bt BT_CLR   &bt BT_SEL 0   &bt BT_SEL 3   &none   &none      &none   &bootloader
        &none            &none   &none   &none        &bt BT_SEL 1   &bt BT_SEL 4   &none   &none      &none   &none
        &studio_unlock   &none   &none   &none        &bt BT_SEL 2   &bt BT_SEL 5   &none   &none      &none   &studio_unlock
                                         &none        &none          &none          &none
      >;
    };
  };
};
